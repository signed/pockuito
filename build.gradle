apply plugin: "java"
apply plugin: "idea"
apply plugin: "nexus"
apply plugin: 'maven'

group = 'com.github.signed.pockuito'
version = '0.2.0-SNAPSHOT'

sourceCompatibility = 1.7
targetCompatibility = 1.7


buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7.1'
    }
}

idea {
    project {
        ipr {
            withXml {
                def project = it.asNode()
                def vcsDirectoryMappings = project.component.find { it.@name == 'VcsDirectoryMappings' };
                vcsDirectoryMappings.children().clear()
                vcsDirectoryMappings.appendNode('mapping', ['directory': '$PROJECT_DIR$', 'vcs': 'Git'])
            }
        }
    }
}

repositories{
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'org.mockito:mockito-core:1.9.5'
    testCompile 'junit:junit-dep:4.10'
    testCompile 'info.cukes:cucumber-java:1.1.1'
    testCompile 'info.cukes:cucumber-junit:1.1.1'
}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
}

modifyPom {
    project {
        name 'pockuito'
        description 'pockuito is a set of small extensions to mockito'
        url 'https://github.com/signed/pockuito'
        inceptionYear '2012'

        scm {
            url 'scm:git@github.com:signed/pockuito.git'
            connection 'scm:git://github.com/signed/pockuito.git'
            developerConnection 'scm:git@github.com:signed/pockuito.git'
        }

        licenses {
            license {
                name 'The MIT License'
                url 'https://raw.github.com/signed/pockuito/master/license'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'thomasheilbronner'
                name 'Thomas Heilbronner'
            }
        }
    }
}

def environments = [
        'local': [
                repositoryLogin: deploymentNexusLocalLogin,
                repositoryPassword: deploymentNexusLocalPassword,
                'urls': [
                        'snapshot': 'http://localhost:8081/nexus/content/repositories/snapshots',
                        'release' : 'http://localhost:8081/nexus/content/repositories/releases'

                ]
        ],
        'sonatype': [
                repositoryLogin: deploymentSonatypeLogin,
                repositoryPassword: deploymentSonatypePassword,
                'urls': [
                        'snapshot': 'https://oss.sonatype.org/content/repositories/snapshots',
                        'release' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                ]
        ]
]

def intent = hasProperty('release') ? 'release' : 'snapshot'
def target = hasProperty('sonatype') ? 'sonatype' : 'local'
println "intent: $intent target: $target url: ${environments.get(target).urls.get(intent)}"

def environment = environments.get(target)
if (project.hasProperty('release')) {
    project.version -= '-SNAPSHOT'
}

ext.nexusUsername = environment.repositoryLogin
ext.nexusPassword = environment.repositoryPassword

nexus {
    sign = project.property('signedDeployment')
    repositoryUrl = environment.urls.release
    snapshotRepositoryUrl = environment.urls.snapshot
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}
